<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush x:Key="LoadingBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#550000" Offset="0.2" />
        <GradientStop Color="Red" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SetupBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#003CFF" Offset="0.2" />
        <GradientStop Color="#0089FF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WhiteFade" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#BABABA" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GrayFade" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="#BABABA" Offset="0" />
        <GradientStop Color="#808080" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RedFade" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="Red" Offset="0" />
        <GradientStop Color="#C30000" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="CommonFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Comic Sans MS"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteFade}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
    </Style>

    <Style x:Key="TitleFont" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Comic Sans MS"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="Line" TargetType="Border">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Height" Value="3"/>
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FontFamily" Value="Comic Sans MS"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10 10 10 0">
                        <ContentPresenter ContentSource="Header" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <BitmapImage x:Key="HappyShield" UriSource="pack://application:,,,/Resources/happy_shield.png"/>
    <BitmapImage x:Key="CyberSoldier" UriSource="pack://application:,,,/Resources/cyber_soldier.png"/>
    <BitmapImage x:Key="Exlon" UriSource="pack://application:,,,/Resources/exlon.png"/>
    <BitmapImage x:Key="YouTubeLogo" UriSource="pack://application:,,,/Resources/yt_logo.png"/>
    <BitmapImage x:Key="DiscordServer" UriSource="pack://application:,,,/Resources/CyberSpace.png"/>
    <BitmapImage x:Key="GitHubLogo" UriSource="pack://application:,,,/Resources/github_logo.png"/>
    <BitmapImage x:Key="BackHappy" UriSource="pack://application:,,,/Resources/background3.png"/>
    <BitmapImage x:Key="BackSatisfied" UriSource="pack://application:,,,/Resources/background4.png"/>
    <BitmapImage x:Key="BackAverage" UriSource="pack://application:,,,/Resources/background5.png"/>
    <BitmapImage x:Key="BackAngry" UriSource="pack://application:,,,/Resources/background6.png"/>
    <BitmapImage x:Key="BackCursed" UriSource="pack://application:,,,/Resources/background7.png"/>
    <BitmapImage x:Key="BackClutter" UriSource="pack://application:,,,/Resources/background8.png"/>
    <BitmapImage x:Key="BackExlon" UriSource="pack://application:,,,/Resources/background9.png"/>
    <BitmapImage x:Key="BackAG" UriSource="pack://application:,,,/Resources/background10.png"/>
    <BitmapImage x:Key="BackEnderman" UriSource="pack://application:,,,/Resources/background11.png"/>
    <BitmapImage x:Key="BackCrypto" UriSource="pack://application:,,,/Resources/background12.png"/>
    <BitmapImage x:Key="BackTranium" UriSource="pack://application:,,,/Resources/background13.png"/>
    <BitmapImage x:Key="GearWheel" UriSource="pack://application:,,,/Resources/gear_wheel.png"/>
    <BitmapImage x:Key="TipBulb" UriSource="pack://application:,,,/Resources/tip_bulb.png"/>
    <BitmapImage x:Key="CheckMark" UriSource="pack://application:,,,/Resources/check.png"/>
    <BitmapImage x:Key="VolumeUp" UriSource="pack://application:,,,/Resources/volume_up.png"/>
    <BitmapImage x:Key="VolumeMuted" UriSource="pack://application:,,,/Resources/volume_muted.png"/>

    <Style x:Key="ClickableImageTriggerStyle" TargetType="StackPanel">
        <Setter Property="TextBlock.FontFamily" Value="Comic Sans MS"/>
        <Setter Property="TextBlock.Foreground" Value="White"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
        <Setter Property="TextBlock.FontSize" Value="20"/>
        <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.Foreground" Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="HeaderExitBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Comic Sans MS"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF0000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderMinBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Comic Sans MS"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#47C9FF"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InstallBtnStyle" TargetType="Button">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="FontFamily" Value="Comic Sans MS"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="130"/>

        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="Black"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1.5" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1.5" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                         To="1" Duration="0:0:0.2" />
                            <DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                         To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ContentBorder" TargetType="Border">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Opacity" Value="1.0"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="VolumeButton" TargetType="Button">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="White"/>

        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10" 
                            BorderBrush="Black" BorderThickness="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.2"
                                Duration="0:0:0.15">
                            </DoubleAnimation>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.2"
                                Duration="0:0:0.15">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.0"
                                Duration="0:0:0.2">
                            </DoubleAnimation>
                            <DoubleAnimation 
                                Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                To="1.0"
                                Duration="0:0:0.2">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="loaderBar" TargetType="ProgressBar">
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="Black" BorderBrush="White" BorderThickness="5"
                            CornerRadius="10">
                        <Grid x:Name="PART_Track" ClipToBounds="true">
                            <Rectangle x:Name="PART_Indicator"
                                   Fill="{StaticResource LoadingBrush}"
                                   HorizontalAlignment="Left"
                                   RadiusX="5" RadiusY="5" />
                            <TextBlock Style="{StaticResource CommonFont}" Text="{TemplateBinding Tag}" 
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="12"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Indicator" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="PART_Indicator" Property="VerticalAlignment" Value="Bottom"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="setupBar" TargetType="ProgressBar">
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="Black" BorderBrush="White" BorderThickness="5"
                        CornerRadius="10">
                        <Grid x:Name="PART_Track" ClipToBounds="true">
                            <Rectangle x:Name="PART_Indicator"
                               Fill="{StaticResource SetupBrush}"
                               HorizontalAlignment="Left"
                               RadiusX="5" RadiusY="5" />
                            <TextBlock Style="{StaticResource CommonFont}" Text="{TemplateBinding Tag}" 
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   FontSize="12"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="PART_Indicator" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="PART_Indicator" Property="VerticalAlignment" Value="Bottom"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WheelAnimation" TargetType="Image">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform CenterX="50" CenterY="50"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                             From="0"
                                             To="360"
                                             Duration="0:0:10"
                                             RepeatBehavior="Forever">
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CheckMarkAnimation" TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0" To="1" Duration="0:0:3">
                                
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>